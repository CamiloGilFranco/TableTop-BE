// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model restaurants {
  id_restaurant     String                    @id @default(cuid())
  restaurant_path   String                    @unique
  restaurant_name   String                    @unique
  logo              String                    @unique
  main_photo        String                    @unique
  rating            Float?
  number_of_sales   Int
  cuisines          cuisines_per_restaurant[]
  photos            restaurant_photos[]
  dishes            dishes[]
  dishes_categories dishes_categories[]
  venues            restaurant_venues[]
  reservations      reservations[]
  reviews           reviews[]
  admins            users[]
  order_details     order_details[]
  createdAt         DateTime                  @default(now())
  updatedAt         DateTime                  @updatedAt
  active            Boolean                   @default(true)
}

model users {
  user_id                  String               @id @default(cuid())
  email                    String               @unique
  password                 String
  name                     String
  last_name                String
  document_type            String
  document_number          String               @unique
  date_of_birth            DateTime
  city                     String
  contact_email            Boolean
  contact_sms              Boolean
  contact_wpp              Boolean
  user_role                String
  reservations             reservations[]
  phone_numbers            user_phone_numbers[]
  addresses                user_addresses[]
  orders                   orders[]
  reviews                  reviews[]
  createdAt                DateTime             @default(now())
  updatedAt                DateTime             @updatedAt
  restaurants              restaurants?         @relation(fields: [restaurantsId_restaurant], references: [id_restaurant])
  restaurantsId_restaurant String?
  active                   Boolean             @default(true)
}

model cuisine_categories {
  id_cuisine_category       String                    @id @default(cuid())
  cuisine_category          String                    @unique
  cuisine_photo             String                    @unique
  id_cuisine_per_restaurant cuisines_per_restaurant[]
  createdAt                 DateTime                  @default(now())
  updatedAt                 DateTime                  @updatedAt
}

model cuisines_per_restaurant {
  id_cuisine_per_restaurant String             @id @default(cuid())
  restaurants               restaurants        @relation(fields: [restaurantsId_restaurant], references: [id_restaurant])
  restaurantsId_restaurant  String
  cuisine_categories        cuisine_categories @relation(fields: [cuisine_category], references: [cuisine_category])
  cuisine_category          String
  createdAt                 DateTime           @default(now())
  updatedAt                 DateTime           @updatedAt
}

model restaurant_photos {
  id_restaurant_photo      String      @id @default(cuid())
  photo_link               String
  restaurants              restaurants @relation(fields: [restaurantsId_restaurant], references: [id_restaurant])
  restaurantsId_restaurant String
  createdAt                DateTime    @default(now())
  updatedAt                DateTime    @updatedAt
}

model dishes {
  id_dish                             String            @id @default(cuid())
  title                               String
  description                         String
  price                               Int
  restaurants                         restaurants       @relation(fields: [restaurantsId_restaurant], references: [id_restaurant])
  restaurantsId_restaurant            String
  dishes_categories                   dishes_categories @relation(fields: [dishes_categoriesId_dishes_category], references: [id_dishes_category])
  dishes_categoriesId_dishes_category String
  order_details                       order_details[]
  createdAt                           DateTime          @default(now())
  updatedAt                           DateTime          @updatedAt
}

model dishes_categories {
  id_dishes_category       String      @id @default(cuid())
  dishes_category          String
  restaurants              restaurants @relation(fields: [restaurantsId_restaurant], references: [id_restaurant])
  restaurantsId_restaurant String
  dishes                   dishes[]
  createdAt                DateTime    @default(now())
  updatedAt                DateTime    @updatedAt
}

model facilities_per_venue {
  id_facility_per_venue                String            @id @default(cuid())
  facilities                           facilities        @relation(fields: [facility], references: [facility_name])
  facility                             String
  restaurant_venues                    restaurant_venues @relation(fields: [restaurant_venuesId_restaurant_venue], references: [id_restaurant_venue])
  restaurant_venuesId_restaurant_venue String
  createdAt                            DateTime          @default(now())
  updatedAt                            DateTime          @updatedAt
}

model facilities {
  id_facility          String                 @id @default(cuid())
  facility_name        String                 @unique
  facilities_per_venue facilities_per_venue[]
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
}

model restaurant_venues {
  id_restaurant_venue      String                 @id @default(cuid())
  name_venue               String
  address                  String
  city                     String
  venue_photo              String
  phone_number             String?
  open_hour                String
  close_hour               String
  restaurants              restaurants            @relation(fields: [restaurantsId_restaurant], references: [id_restaurant])
  restaurantsId_restaurant String
  facilities               facilities_per_venue[]
  reservations             reservations[]
  createdAt                DateTime               @default(now())
  updatedAt                DateTime               @updatedAt
}

model reservations {
  id_reservation                       String            @id @default(cuid())
  date_hour                            DateTime
  restaurants                          restaurants       @relation(fields: [restaurantsId_restaurant], references: [id_restaurant])
  restaurantsId_restaurant             String
  restaurant_venues                    restaurant_venues @relation(fields: [restaurant_venuesId_restaurant_venue], references: [id_restaurant_venue])
  restaurant_venuesId_restaurant_venue String
  users                                users             @relation(fields: [usersUser_id], references: [user_id])
  usersUser_id                         String
  createdAt                            DateTime          @default(now())
  updatedAt                            DateTime          @updatedAt
}

model user_phone_numbers {
  id_user_phone_number String   @id @default(cuid())
  phone_number         String
  users                users    @relation(fields: [usersUser_id], references: [user_id])
  usersUser_id         String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model user_addresses {
  id_address   String   @id @default(cuid())
  address_name String
  address      String
  city         String
  users        users    @relation(fields: [usersUser_id], references: [user_id])
  usersUser_id String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model orders {
  id_order      String          @id @default(cuid())
  price         Int
  users         users           @relation(fields: [usersUser_id], references: [user_id])
  usersUser_id  String
  order_details order_details[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model order_details {
  id_order_detail          String      @id @default(cuid())
  orders                   orders      @relation(fields: [ordersId_order], references: [id_order])
  ordersId_order           String
  dishes                   dishes      @relation(fields: [dishesId_dish], references: [id_dish])
  dishesId_dish            String
  restaurants              restaurants @relation(fields: [restaurantsId_restaurant], references: [id_restaurant])
  restaurantsId_restaurant String
  createdAt                DateTime    @default(now())
  updatedAt                DateTime    @updatedAt
}

model reviews {
  id_review                String      @id @default(cuid())
  title                    String
  rating                   Int
  comment                  String
  restaurants              restaurants @relation(fields: [restaurantsId_restaurant], references: [id_restaurant])
  restaurantsId_restaurant String
  users                    users       @relation(fields: [usersUser_id], references: [user_id])
  usersUser_id             String
  createdAt                DateTime    @default(now())
  updatedAt                DateTime    @updatedAt
}
